version: '3.8'

services:
  nginx:
    depends_on:
      - backend
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./static:/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  backend:
    depends_on:
      - database
      - migration
      - collectstatic
    image: dockerhw3
    build:
      context: simple_crud
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - 8001:8000
#    volumes:
#      - ./static:/app/static
    networks:
      - backend
  collectstatic:
    image: new_python
    build: .
    command: python manage.py collectstatic --noinput
    volumes:
      - ./static:./static
  migration:
    image: dockerhw3
#    build: .
    command: python manage.py migrate --noinput
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
  database:
    image: postgres:11.0-alpine
    environment:
      DEBUG: 'false'
    env_file:
      - .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  volumes:
    pg-data:
  networks:
    backend:

